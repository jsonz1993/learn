//SCSS中混合宏使用
@mixin mt($var) {
    margin-top: $var;
}

.block {
    @include mt(5px);
    span {
        display: block;
        @include mt(5px);
    }
}

.header {
    color: orange;
    @include mt(5px);
    span {
        display: block;
        @include mt(5px);
    }
}

//SCSS 继承的运用
.mt {
    margin-top: 5px;
}

.block {
    @extend .mt;
    span {
        display: block;
        @extend .mt;
    }
}

.header {
    color: orange;
    @extend .mt;
    span {
        display: block;
        @extend .mt;
    }
}

//SCSS中占位符的使用
%mt {
    margin-top: 5px;
}

.block {
    @extend %mt;
    span {
        display: block;
        @extend %mt;
    }
}

.header {
    color: orange;
    @extend %mt;
    span {
        display: block;
        @extend %mt;
    }
}

$properties: (margin, padding);
@mixin set-value($side, $value) {
    @each $prop in $properties {
        #{$prop}-#{$side}: $value;
    }
}

.login-box {
    @include set-value(top, 14px);
}

@mixin generate-sizes($class, $small, $medium, $big) {
    .#{$class}-small {
        font-size: $small;
    }
    .#{$class}-medium {
        font-size: $medium;
    }
    .#{$class}-big {
        font-size: $big;
    }
}

@include generate-sizes('header-text', 12px, 20px, 40px);
%update-status {
    margin-top: 20px;
    background: #F00;
}

.selected-status {
    font-weight: bold;
}

$flag: 'status';
.navigation {
    @extend %update-#{$flag};
    @extend .selected-#{$flag};
}

.box {
    width: 20px + 9in;
    height: 9in - 20px;
    margin: 9in * 2;
    padding: (10px/2);
}

//高级sass
@mixin blockOrHidden($boolean:true) {
    @if $boolean {
        @debug "$boolean is #{$boolean}";
        display: block;
    }
    @else {
        @debug "$boolean is #{$boolean}";
        display: none;
    }
}

.block {
    @include blockOrHidden;
}

.hidden {
    @include blockOrHidden(false);
}

@for $i from 1 through 3 {
    .item-#{$i} {
        width: 2em * $i;
    }
}

@for $i from 1 to 3 {
    .item-#{$i} {
        height: 2em * $i;
    }
}

$grid-prefix: span !default;
$grid-width: 60px !default;
$grid-gutter: 20px !default;
%grid {
    float: left;
    margin-left: $grid-gutter / 2;
    margin-right: $grid-gutter / 2;
}

@for $i from 1 through 12 {
    .#{$grid-prefix}#{$i} {
        width: $grid-width * $i + $grid-gutter * ($i - 1);
        @extend %grid;
    }
}

$list : adam john wynn mason kuroir;

@mixin author-images {
  @each $author in $list {
    .photo-#{$author} {
      background: url("/images/avatars/#{$author}.png no-repeat")
    }
  }
}

.author-bio {
  @include author-images;
}
